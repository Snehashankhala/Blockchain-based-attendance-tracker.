import React, { useState, useEffect } from "react";
import Web3 from "web3";
import contractABI from "./contractABI.json"; // Replace with your contract ABI file

const CONTRACT_ADDRESS = "YOUR_CONTRACT_ADDRESS"; // Replace with deployed contract address

const AttendanceApp = () => {
  const [account, setAccount] = useState("");
  const [web3, setWeb3] = useState(null);
  const [contract, setContract] = useState(null);
  const [admin, setAdmin] = useState("");
  const [attendanceMarked, setAttendanceMarked] = useState(false);
  const [attendanceData, setAttendanceData] = useState(null);

  useEffect(() => {
    const initWeb3 = async () => {
      if (window.ethereum) {
        try {
          const web3Instance = new Web3(window.ethereum);
          await window.ethereum.request({ method: "eth_requestAccounts" });
          const accounts = await web3Instance.eth.getAccounts();
          const contractInstance = new web3Instance.eth.Contract(contractABI, CONTRACT_ADDRESS);
          const adminAddress = await contractInstance.methods.admin().call();

          setWeb3(web3Instance);
          setAccount(accounts[0]);
          setContract(contractInstance);
          setAdmin(adminAddress);
        } catch (error) {
          console.error("Error initializing Web3:", error);
        }
      } else {
        alert("Please install MetaMask to use this app.");
      }
    };
    initWeb3();
  }, []);

  const markAttendance = async () => {
    if (contract && account) {
      try {
        await contract.methods.markAttendance().send({ from: account });
        setAttendanceMarked(true);
      } catch (error) {
        console.error("Error marking attendance:", error);
      }
    }
  };

  const checkAttendance = async () => {
    if (contract && account) {
      try {
        const data = await contract.methods.getAttendance(account).call();
        setAttendanceData(data);
      } catch (error) {
        console.error("Error fetching attendance:", error);
      }
    }
  };

  return (
    <div className="container" style={{ textAlign: "center", padding: "20px" }}>
      <h1>Blockchain Attendance System</h1>
      <p>Connected Account: {account}</p>
      
      {account.toLowerCase() === admin.toLowerCase() ? (
        <div>
          <h2>Admin Panel</h2>
          <button onClick={checkAttendance}>Check Student Attendance</button>
          {attendanceData && (
            <p>Present: {attendanceData[0] ? "Yes" : "No"} | Timestamp: {attendanceData[1]}</p>
          )}
        </div>
      ) : (
        <div>
          <h2>Student Panel</h2>
          <button onClick={markAttendance} disabled={attendanceMarked}>
            {attendanceMarked ? "Attendance Marked" : "Mark Attendance"}
          </button>
        </div>
      )}
    </div>
  );
};

export default AttendanceApp;
